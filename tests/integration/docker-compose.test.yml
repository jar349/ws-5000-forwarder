services:
  influxdb:
    image: influxdb:2.7
    container_name: ws5000-test-influxdb
    ports:
      - "8086:8086"
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=adminpassword
      - DOCKER_INFLUXDB_INIT_ORG=ws5000-test
      - DOCKER_INFLUXDB_INIT_BUCKET=ws-5000
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=admin-token-for-setup-only
    volumes:
      - influxdb_data:/var/lib/influxdb2
    healthcheck:
      test: ["CMD-SHELL", "influx ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  app:
    build: 
      context: ../../
      dockerfile: Dockerfile
      target: production
    container_name: ws5000-test-app
    ports:
      - "8000:8000"
    environment:
      - INFLUX_URL=http://influxdb:8086
      - INFLUX_ORG=ws5000-test
      - INFLUX_BUCKET=ws-5000
      - INFLUX_TOKEN=${WS5000_LIMITED_TOKEN}
    depends_on:
      influxdb:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  test-runner:
    build:
      context: ../../
      dockerfile: Dockerfile
      target: testing
    container_name: ws5000-test-runner
    volumes:
      - ../../tests:/app/tests
    environment:
      - INFLUX_URL=http://influxdb:8086
      - INFLUX_ORG=ws5000-test
      - INFLUX_BUCKET=ws-5000
      - INFLUX_TOKEN=${WS5000_LIMITED_TOKEN}
      - APP_URL=http://app:8000
    depends_on:
      app:
        condition: service_healthy
      influxdb:
        condition: service_healthy
    command: ["uv", "run", "pytest", "tests/integration/", "-v", "--junitxml=/app/test-results/results.xml"]

volumes:
  influxdb_data:
